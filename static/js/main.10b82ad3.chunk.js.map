{"version":3,"sources":["Clock.tsx","App.tsx","service/getRandomName.tsx","index.tsx"],"names":["Clock","state","today","Date","timerId","this","window","setInterval","setState","console","info","toUTCString","slice","clearInterval","name","props","className","PureComponent","App","clockName","hasClock","clockId","handleRightClick","handleLeftClick","event","preventDefault","newClockName","value","now","toString","getRandomName","document","addEventListener","prevProps","prevState","debug","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,MAFf,EAKEC,QAAU,EALZ,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,MAAO,IAAIC,OAG3BM,QAAQC,KAAK,EAAKT,MAAMC,MAAMS,cAAcC,OAAO,IAAK,MACvD,OAbP,kCAgBE,WACEN,OAAOO,cAAcR,KAAKD,WAjB9B,oBAoBE,WACE,IAAQU,EAAST,KAAKU,MAAdD,KAER,OACE,sBAAKE,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGF,IAGF,YAED,sBAAME,UAAU,cAAhB,SACGX,KAAKJ,MAAMC,MAAMS,cAAcC,OAAO,IAAK,YAhCtD,GAA2BK,iBCGpB,IAAMC,EAAb,4MACEjB,MAAe,CACbkB,UAAW,UACXC,UAAU,GAHd,EAMEC,QAAU,EANZ,EAmCEC,iBAAmB,WACjB,EAAKd,SAAS,CAAEY,UAAU,KApC9B,EAuCEG,gBAAkB,SAACC,GACjBA,EAAMC,iBACN,EAAKjB,SAAS,CAAEY,UAAU,KAzC9B,uDAQE,WAA2B,IAAD,OACxBf,KAAKgB,QAAUf,OAAOC,aAAY,WAChC,IAAMmB,ECvBL,WACL,IAAMC,EAAQxB,KAAKyB,MAAMC,WAAWjB,OAAO,GAE3C,MAAM,SAAN,OAAgBe,GDoBSG,GAErB,EAAKtB,SAAS,CAAEW,UAAWO,MAC1B,MAEHK,SAASC,iBAAiB,cAAe3B,KAAKiB,kBAC9CS,SAASC,iBAAiB,QAAS3B,KAAKkB,mBAhB5C,gCAmBE,SACEU,EACAC,GAEIA,EAAUf,YAAcd,KAAKJ,MAAMkB,WACpB,OAAdc,GACA5B,KAAKJ,MAAMmB,UAEdX,QAAQ0B,MAAR,uBAA8BD,EAAUf,UAAxC,eAAwDd,KAAKJ,MAAMkB,cA3BzE,kCA+BE,WACEb,OAAOO,cAAcR,KAAKgB,WAhC9B,oBA4CE,WACE,OACE,sBAAKL,UAAU,MAAf,UACE,6CAECX,KAAKJ,MAAMmB,UACV,cAAC,EAAD,CAAON,KAAMT,KAAKJ,MAAMkB,mBAlDlC,GAAyBF,iBEVzBmB,IAASC,OACP,cAAC,EAAD,IACAN,SAASO,eAAe,W","file":"static/js/main.10b82ad3.chunk.js","sourcesContent":["import { PureComponent } from 'react';\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  today: Date;\n};\n\nexport class Clock extends PureComponent<Props, State> {\n  state = {\n    today: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({ today: new Date() });\n\n      // eslint-disable-next-line no-console\n      console.info(this.state.today.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { PureComponent } from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\nimport { getRandomName } from './service/getRandomName';\n\ntype State = {\n  clockName: string;\n  hasClock: boolean;\n};\n\ntype Props = {\n};\n\nexport class App extends PureComponent<Props, State> {\n  state: State = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  clockId = 0;\n\n  componentDidMount(): void {\n    this.clockId = window.setInterval(() => {\n      const newClockName = getRandomName();\n\n      this.setState({ clockName: newClockName });\n    }, 3300);\n\n    document.addEventListener('contextmenu', this.handleRightClick);\n    document.addEventListener('click', this.handleLeftClick);\n  }\n\n  componentDidUpdate(\n    prevProps: Readonly<Props>,\n    prevState: Readonly<State>,\n  ): void {\n    if (prevState.clockName !== this.state.clockName\n      && prevProps !== null\n      && this.state.hasClock) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevState.clockName} to ${this.state.clockName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.clockId);\n  }\n\n  handleRightClick = () => {\n    this.setState({ hasClock: false });\n  };\n\n  handleLeftClick = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {this.state.hasClock && (\n          <Clock name={this.state.clockName} />\n        )}\n      </div>\n    );\n  }\n}\n","export function getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}